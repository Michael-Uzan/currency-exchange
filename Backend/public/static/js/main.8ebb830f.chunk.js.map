{"version":3,"sources":["assets/imgs/github-logo.png","cmp/AppFooter.tsx","services/event-bus.service.ts","services/http.service.ts","services/user.service.ts","store/actions/userActions.ts","cmp/AppHeader.tsx","cmp/UserMsg.tsx","cmp/BarCurrencyRate.tsx","cmp/ImgCurrencyRate.tsx","cmp/OptionCurrencyRate.tsx","cmp/DynamicCurrencyRate.tsx","cmp/CurrencyRateList.tsx","assets/imgs/bars-loader.svg","cmp/Loading.tsx","services/rate.service.ts","pages/Dashboard.tsx","cmp/TransferPreview.tsx","cmp/TransferList.tsx","services/transfer.service.ts","pages/History.tsx","hooks/useForm.ts","store/actions/currencyRateActions.ts","cmp/RateExamples.tsx","cmp/TransferMoney.tsx","routes/routes.ts","pages/Rates.tsx","pages/Signup.tsx","pages/Login.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","store/reducers/currencyRateReducer.ts","store/reducers/userReducer.ts","store/index.ts","index.tsx"],"names":["AppFotter","className","src","target","href","gitHubLogo","eventBusService","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","data","dispatchEvent","CustomEvent","showSuccessMsg","txt","showUserMsg","showErrorMsg","type","myBus","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","ajax","a","method","url","params","res","console","log","dir","STORAGE_KEY_LOGGEDIN_USER","userService","login","logout","signup","getLoggedinUser","JSON","parse","sessionStorage","getItem","userCred","user","Error","_saveLocalUser","removeItem","setItem","stringify","onLogin","credentials","dispatch","username","onSignup","AppHeader","useDispatch","loggedInUser","useSelector","state","userModule","useState","isMenuOpen","setIsMenuOpen","onMenuClick","onLogoutClick","onClick","activeClassName","exact","to","UserMsg","removeEvent","msg","this","setState","setTimeout","msgType","React","Component","BarCurrencyRate","currencyRates","rates","filter","currencyRate","directionType","height","width","labels","map","rate","currency","datasets","label","rateToDollar","backgroundColor","borderColor","borderWidth","options","indexAxis","maintainAspectRatio","responsive","scales","x","ticks","stepSize","plugins","legend","display","ImgCurrencyRate","img","OptionCurrencyRate","value","DynamicCurrencyRate","props","DynamicCmp","CurrencyRateList","_id","Loading","Loader","alt","rateService","getRate","getRates","rateProperties","srcCoin","desCoin","TransferPreview","transfer","from","srcCurrCurrencyImg","srcAmount","desCurrCurrencyImg","desAmount","reciverName","TransferList","transfers","transferService","addTransfer","getTransfers","useForm","initialFields","cb","fields","setFields","useEffect","handleChange","field","name","checked","prevFields","getCurrencyRates","setCurrRateImgs","RateExamples","currencyRateModule","currRate","setCurrRate","onRateChange","amount","min","onChange","TransferMoney","transferProperties","setTransferProperties","onTransfer","ev","preventDefault","prevState","onSubmit","htmlFor","id","placeholder","required","routes","path","component","setRates","loadRates","setTransfers","loadTransfers","history","password","fullname","onSignupSubmit","push","autoFocus","onLoginSubmit","App","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","srcCurrency","desCurrency","newState","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ebb830f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-logo.27e6971f.png\";","import gitHubLogo from '../assets/imgs/github-logo.png';\r\n\r\nexport function AppFotter() {\r\n    return (\r\n        <footer className=\"main-footer full\">\r\n            <div className=\"footer-logo flex direction-col align-center\">\r\n                <p>&copy; Currency Exchange by Michael Uzan</p>\r\n                <img src=\"https://www.rewire.co.il/wp-content/uploads/2019/10/app_icon.png\" />\r\n            </div>\r\n            <div className=\"footer-desc\">\r\n                <ul className=\"social-links clean-list flex direction-row justify-center\">\r\n                    <li>\r\n                        <a target=\"_blank\" href=\"https://github.com/Michael-Uzan/currency-exchange\">\r\n                            <p>See Code on GitHub Here: </p>\r\n                            <img src={gitHubLogo} />\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","export const eventBusService = {\n    on,\n    emit,\n    showSuccessMsg,\n    showErrorMsg\n};\n\nfunction on(eventName: string, listener: any) {\n\n    const callListener = ({ detail }: any) => {\n        listener(detail);\n    };\n\n    window.addEventListener(eventName, callListener);\n\n    return () => {\n        window.removeEventListener(eventName, callListener);\n    };\n}\n\nfunction emit(eventName: string, data: any) {\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\n}\n\n\nexport function showUserMsg(txt: string, type: string = '') {\n    eventBusService.emit('show-user-msg', { txt, type })\n}\nexport function showSuccessMsg(txt: string) {\n    showUserMsg(txt, 'success')\n}\nexport function showErrorMsg(txt: string) {\n    showUserMsg(txt, 'danger')\n}\n\nwindow.myBus = eventBusService;\nwindow.showUserMsg = showUserMsg;\n\n\ndeclare global {\n    interface Window { myBus: any, showUserMsg: any }\n}\n\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint: string, data: any) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint: string, data: any) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint: string, data: any) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint: string, data: any) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint: string, method: any = 'GET', data: any | null = null): Promise<any> {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err: any) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        throw err\r\n    }\r\n}\r\n\r\n","import { ICredentials } from '../interface/ICredentials'\r\nimport { httpService } from './http.service'\r\n\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n}\r\n\r\nasync function login(userCred: ICredentials) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (!user) {\r\n        throw new Error('login service error')\r\n    }\r\n    return _saveLocalUser(user)\r\n}\r\n\r\nasync function signup(userCred: ICredentials) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n    return await httpService.post('auth/logout', null)\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\r\n}\r\n\r\nfunction _saveLocalUser(user: ICredentials) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}","import { ICredentials } from \"../../interface/ICredentials.js\";\r\nimport { eventBusService } from \"../../services/event-bus.service\";\r\nimport { userService } from \"../../services/user.service\";\r\n\r\nexport function onLogin(credentials: ICredentials) {\r\n    return async (dispatch: Function) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n            eventBusService.showSuccessMsg(`Welcome ${user.username}!`)\r\n            return user\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n            eventBusService.showErrorMsg('Sorry cannot Login!')\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function onSignup(credentials: ICredentials) {\r\n    return async (dispatch: Function) => {\r\n        try {\r\n            const user = await userService.signup(credentials)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n            eventBusService.showSuccessMsg(`Welcome ${user.username}!`)\r\n        } catch (err) {\r\n            console.log('Cannot signup', err)\r\n            eventBusService.showErrorMsg('Sorry cannot Signup!')\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return async (dispatch: Function) => {\r\n        try {\r\n            const user = await userService.logout()\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user: null\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot logout', err)\r\n            eventBusService.showErrorMsg('Sorry cannot Logout!')\r\n        }\r\n    }\r\n}\r\n","import { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { onLogout } from '../store/actions/userActions';\r\n\r\nexport const AppHeader = () => {\r\n    const dispatch = useDispatch()\r\n    const loggedInUser: any = useSelector((state: RootState) => state.userModule.loggedInUser)\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\r\n\r\n    const onMenuClick = (): void => {\r\n        setIsMenuOpen(!isMenuOpen)\r\n    }\r\n\r\n    const getMenuClass = (): string => {\r\n        return isMenuOpen ? 'menu-open' : ''\r\n    }\r\n\r\n    const onLogoutClick = async () => {\r\n        setIsMenuOpen(!isMenuOpen)\r\n        try {\r\n            await dispatch(onLogout())\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className={`full flex space-between ${getMenuClass()}`}>\r\n            <div className=\"flex align-center space-around\">\r\n                <img src=\"https://www.rewire.co.il/wp-content/uploads/2021/02/Purple-logo-1.svg\" />\r\n                <h3>Hello {loggedInUser ? loggedInUser.username : 'guest'}</h3>\r\n                <nav className=\"flex\">\r\n                    <NavLink onClick={onMenuClick} activeClassName=\"active\" exact to=\"/\" >Home</NavLink>\r\n                    <NavLink onClick={onMenuClick} activeClassName=\"active\" exact to=\"/rates\" >Rates</NavLink>\r\n                    <NavLink onClick={onMenuClick} activeClassName=\"active\" exact to=\"/history\" >History</NavLink>\r\n                    <NavLink onClick={onMenuClick} activeClassName=\"active\" exact to=\"/dashboard\" >Dashboard</NavLink>\r\n                    {!loggedInUser && <NavLink onClick={onMenuClick} activeClassName=\"active\" exact to=\"/login\" >Login</NavLink>}\r\n                    {loggedInUser && <NavLink onClick={onLogoutClick} activeClassName=\"active\" exact to=\"/\" >Logout</NavLink>}\r\n                </nav>\r\n            </div>\r\n            <div className=\"screen\" onClick={onMenuClick}></div>\r\n            <button className=\"btn-menu-toggle\" onClick={onMenuClick}>☰</button>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\n\nimport { eventBusService } from '../services/event-bus.service'\n\nexport class UserMsg extends React.Component {\n\n  removeEvent: any;\n\n  state: any | null = {\n    msg: null\n  }\n\n  componentDidMount() {\n    this.removeEvent = eventBusService.on('show-user-msg', (msg: string) => {\n      this.setState({ msg })\n      setTimeout(() => {\n        this.setState({ msg: null })\n      }, 4000)\n    })\n  }\n\n  componentWillUnmount() {\n    this.removeEvent()\n  }\n\n  render() {\n    if (!this.state.msg) return <></>\n    const msgType = this.state.msg.type || ''\n    return (\n      <section className={`user-msg  flex direction-row align-center ${msgType}`}>\n        <div className=\" txt-msg flex direction-row align-center\">\n          {this.state.msg.txt}\n        </div>\n        <button onClick={() => {\n          this.setState({ msg: null })\n        }}>x</button>\n      </section>\n    )\n  }\n}\n","import { Bar } from 'react-chartjs-2';\r\nimport { ICurrencyRate } from '../interface/ICurrencyRate';\r\n\r\ninterface PropType {\r\n    rates: ICurrencyRate[]\r\n}\r\n\r\nexport const BarCurrencyRate = ({ rates: currencyRates }: PropType) => {\r\n    currencyRates = currencyRates.filter((currencyRate: ICurrencyRate) => currencyRate.directionType === 'des')\r\n\r\n    const getBarData = (): any => {\r\n        return ({\r\n            labels: currencyRates.map(rate => rate.currency),\r\n            datasets: [\r\n                {\r\n                    label: 'Dollar $',\r\n                    data: currencyRates.map(rate => rate.rateToDollar),\r\n                    backgroundColor: [\r\n                        '#321879',\r\n                    ],\r\n                    borderColor: [\r\n                        '#321879',\r\n                    ],\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        })\r\n    }\r\n\r\n    const options: any = {\r\n        indexAxis: 'y',\r\n        maintainAspectRatio: false,\r\n        responsive: false,\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    stepSize: 0.3\r\n                }\r\n            }\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Bar height={300} width={230} data={getBarData()} options={options} />\r\n    )\r\n}\r\n","import { ICurrencyRate } from '../interface/ICurrencyRate'\r\n\r\ninterface PropType {\r\n    currencyRate: ICurrencyRate\r\n}\r\n\r\nexport const ImgCurrencyRate = ({ currencyRate }: PropType) => {\r\n    return (\r\n        <section className=\"img-currency-rate flex align-center space-between\">\r\n            {currencyRate.currency} <img className=\"img-icon\" src={currencyRate.img} />\r\n        </section>\r\n    )\r\n}\r\n","import { ICurrencyRate } from '../interface/ICurrencyRate'\r\n\r\ninterface PropType {\r\n    currencyRate: ICurrencyRate,\r\n}\r\n\r\nexport const OptionCurrencyRate = ({ currencyRate }: PropType) => {\r\n\r\n    return (\r\n        <option value={currencyRate.currency}>{currencyRate.currency}</option>\r\n    )\r\n}\r\n","import { ImgCurrencyRate } from './ImgCurrencyRate'\r\nimport { OptionCurrencyRate } from './OptionCurrencyRate'\r\n\r\nexport const DynamicCurrencyRate = (props: any) => {\r\n\r\n    const DynamicCmp = (props: any) => {\r\n        switch (props.type) {\r\n            case 'src':\r\n            case 'des':\r\n                return <OptionCurrencyRate currencyRate={props.currencyRate} />\r\n            case 'img':\r\n                return <ImgCurrencyRate currencyRate={props.currencyRate} />\r\n            default:\r\n                return props.type\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DynamicCmp type={props.type} {...props} />\r\n    )\r\n}\r\n","import { ICurrencyRate } from '../interface/ICurrencyRate'\r\nimport { DynamicCurrencyRate } from './DynamicCurrencyRate'\r\n\r\ninterface PropType {\r\n    currencyRates: ICurrencyRate[],\r\n    type: string,\r\n}\r\n\r\nexport const CurrencyRateList = ({ currencyRates, type }: PropType) => {\r\n\r\n    if (type === 'src' || type === 'des') currencyRates = currencyRates.filter(currencyRate => currencyRate.directionType === type)\r\n\r\n    return (\r\n        <>\r\n            {currencyRates.map((currencyRate: ICurrencyRate) =>\r\n                (<DynamicCurrencyRate key={currencyRate._id} currencyRate={currencyRate} type={type} />))}\r\n        </>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bars-loader.77c2ebfd.svg\";","import Loader from '../assets/imgs/bars-loader.svg';\n\nexport function Loading() {\n    return (\n        <div className=\"loader flex align-center justify-center\">\n            <img src={Loader} alt=\"loading...\" />\n        </div>\n    )\n}\n","import IRateProperties from \"../interface/IRateProperties.interface\";\r\nimport { httpService } from \"./http.service\";\r\n\r\nexport const rateService = {\r\n    getRate,\r\n    getRates,\r\n}\r\n\r\nasync function getRate(rateProperties: IRateProperties) {\r\n    const { srcCoin, desCoin } = rateProperties\r\n    return httpService.get(`rate/${srcCoin}/${desCoin}`, null)\r\n}\r\n\r\nasync function getRates() {\r\n    return httpService.get('rate/', null)\r\n}\r\n\r\n","import { useEffect, useState } from 'react'\r\nimport { BarCurrencyRate } from '../cmp/BarCurrencyRate';\r\nimport { CurrencyRateList } from '../cmp/CurrencyRateList';\r\nimport { Loading } from '../cmp/Loading';\r\nimport { ICurrencyRate } from '../interface/ICurrencyRate';\r\nimport { rateService } from '../services/rate.service'\r\n\r\nexport const Dashboard = () => {\r\n\r\n    const [rates, setRates] = useState<ICurrencyRate[] | null>(null);\r\n\r\n    useEffect(() => {\r\n        loadRates()\r\n    }, [])\r\n\r\n    const loadRates = async () => {\r\n        const rates = await rateService.getRates()\r\n        setRates(rates)\r\n    }\r\n\r\n    if (!rates) return <Loading />\r\n\r\n    return (\r\n        <section className=\"dashboard space-between\">\r\n            <div className=\"rate-dollar\">\r\n                <h3>Rate of currency to 1$ </h3>\r\n                <BarCurrencyRate rates={rates} />\r\n            </div>\r\n            <div className=\"supported-coins\">\r\n                <h3>Our supported coins</h3>\r\n                <CurrencyRateList currencyRates={rates} type={'img'} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { ITransfer } from '../interface/ITransfer'\r\n\r\ninterface PropType {\r\n    transfer: ITransfer\r\n}\r\n\r\nexport const TransferPreview = ({ transfer }: PropType) => {\r\n    const { from, srcCoin, srcCurrCurrencyImg, srcAmount,\r\n        desCoin, desCurrCurrencyImg, desAmount, reciverName, msg } = transfer\r\n    return (\r\n        <section className=\"transfer-preview\">\r\n            <div className=\" flex  align-center\">\r\n                <h3>From: {from}  </h3>\r\n                <div className=\"flex space-between align-center\">\r\n                    <h3>Sent: {srcAmount} {srcCoin}</h3>\r\n                    <img src={srcCurrCurrencyImg} className=\"img-icon\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex  align-center\">\r\n                <h3>To: {reciverName}</h3>\r\n                <div className=\"flex space-between align-center\">\r\n                    <h3>Recived: {desAmount} {desCoin}</h3>\r\n                    <img src={desCurrCurrencyImg} className=\"img-icon\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"flex align-center\">\r\n                <h3>Massage:</h3>\r\n                <p>{msg}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { ITransfer } from '../interface/ITransfer'\r\nimport { TransferPreview } from './TransferPreview'\r\n\r\ninterface PropType {\r\n    transfers: ITransfer[],\r\n}\r\n\r\nexport const TransferList = ({ transfers }: PropType) => {\r\n    return (\r\n        <section className=\"transfer-list\">\r\n            {transfers.map((transfer: ITransfer) => <TransferPreview key={transfer._id} transfer={transfer} />)}\r\n        </section>\r\n    )\r\n}\r\n\r\n","import { ITransfer } from \"../interface/ITransfer\";\r\nimport { httpService } from \"./http.service\";\r\n\r\nexport const transferService = {\r\n    addTransfer,\r\n    getTransfers,\r\n}\r\n\r\nasync function addTransfer(transfer: ITransfer) {\r\n    return httpService.post(`transfer/`, transfer)\r\n}\r\n\r\nasync function getTransfers() {\r\n    return httpService.get('transfer/', null)\r\n}","import { useEffect, useState } from 'react'\r\nimport { Loading } from '../cmp/Loading';\r\nimport { TransferList } from '../cmp/TransferList';\r\nimport { transferService } from '../services/transfer.service';\r\n\r\nexport const History = () => {\r\n    const [transfers, setTransfers] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        loadTransfers()\r\n    }, [])\r\n\r\n    const loadTransfers = async () => {\r\n        const transfers = await transferService.getTransfers()\r\n        setTransfers(transfers)\r\n    }\r\n\r\n    if (!transfers) return <Loading />\r\n\r\n    return (\r\n        <section className=\"history \">\r\n            <h1>Last 10 Transfers</h1>\r\n            <TransferList transfers={transfers} />\r\n        </section>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\n\nexport const useForm = (initialFields: any, cb: Function = () => { }) => {\n\n  const [fields, setFields] = useState(initialFields)\n\n  useEffect(() => {\n    cb(fields)\n  }, [fields])\n\n  const handleChange = ({ target }: any) => {\n    const field: string = target.name\n    let value: boolean | number | string;\n    switch (target.type) {\n      case \"number\":\n        value = +target.value\n        break\n      case \"checkbox\":\n        value = target.checked\n        break\n      default:\n        value = target.value\n        break;\n    }\n    setFields((prevFields: any) => ({ ...prevFields, [field]: value }))\n  }\n\n  return [\n    fields,\n    handleChange,\n    setFields\n  ]\n}","import IRateProperties from '../../interface/IRateProperties.interface';\r\nimport { rateService } from '../../services/rate.service'\r\n\r\nexport function getCurrencyRates() {\r\n  return async (dispatch: Function) => {\r\n    try {\r\n      const currencyRates = await rateService.getRates()\r\n      dispatch({ type: 'SET_CURRENCY_RATES', currencyRates })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function setCurrRateImgs(rateProperties: IRateProperties) {\r\n  return (dispatch: Function) => {\r\n    dispatch({ type: 'SET_IMGS', rateProperties })\r\n  }\r\n}","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { CurrencyRateList } from '../cmp/CurrencyRateList'\r\nimport { Loading } from '../cmp/Loading'\r\nimport { useForm } from '../hooks/useForm'\r\nimport IRateProperties from '../interface/IRateProperties.interface'\r\nimport { rateService } from '../services/rate.service'\r\nimport { RootState } from '../store';\r\nimport { getCurrencyRates, setCurrRateImgs } from '../store/actions/currencyRateActions';\r\n\r\nexport const RateExamples = () => {\r\n    const { currencyRates, srcCurrCurrencyImg, desCurrCurrencyImg } = useSelector((state: RootState) => state.currencyRateModule)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrencyRates());\r\n    }, [])\r\n\r\n    const [currRate, setCurrRate] = useState<any>(null);\r\n\r\n    const onRateChange = async (rateProperties: IRateProperties) => {\r\n        const currRate = await rateService.getRate(rateProperties)\r\n        dispatch(setCurrRateImgs(rateProperties))\r\n        setCurrRate(currRate)\r\n    }\r\n\r\n    const [rateProperties, handleChange] = useForm({\r\n        srcCoin: 'ILS',\r\n        desCoin: 'PHP',\r\n        amount: 100\r\n    }, onRateChange)\r\n\r\n    if (!currRate || !currencyRates || !srcCurrCurrencyImg || !desCurrCurrencyImg) return <Loading />\r\n\r\n    const { srcCoin, desCoin, amount } = rateProperties\r\n\r\n    return (\r\n        <section className=\"rates-example \">\r\n            <form className=\"currency-form\">\r\n                <h2>Check out our rates</h2>\r\n                <h3>When you send</h3>\r\n                <div className=\"flex space-between align-center\">\r\n                    <input type=\"number\" min={1} onChange={handleChange} name=\"amount\" value={amount} />\r\n                    <div className=\"flex align-center\">\r\n                        <img className=\"img-icon\" src={srcCurrCurrencyImg} />\r\n                        <select value={srcCoin} onChange={handleChange} name=\"srcCoin\">\r\n                            <CurrencyRateList currencyRates={currencyRates} type={'src'} />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <h3>They'll receive</h3>\r\n                <div className=\"flex space-between align-center\">\r\n                    <div>{amount * currRate}</div>\r\n                    <div className=\"flex align-center\">\r\n                        <img className=\"img-icon\" src={desCurrCurrencyImg} />\r\n                        <select value={desCoin} onChange={handleChange} name=\"desCoin\">\r\n                            <CurrencyRateList currencyRates={currencyRates} type={'des'} />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <button><Link to=\"/login\"> Login to transfer</Link></button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import { FormEvent, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CurrencyRateList } from '../cmp/CurrencyRateList'\r\nimport { Loading } from '../cmp/Loading'\r\nimport { useForm } from '../hooks/useForm'\r\nimport IRateProperties from '../interface/IRateProperties.interface'\r\nimport { ITransfer } from '../interface/ITransfer';\r\nimport { eventBusService } from '../services/event-bus.service';\r\nimport { rateService } from '../services/rate.service'\r\nimport { transferService } from '../services/transfer.service';\r\nimport { RootState } from '../store';\r\nimport { getCurrencyRates, setCurrRateImgs } from '../store/actions/currencyRateActions';\r\n\r\ninterface ITransferState {\r\n    srcCoin?: string,\r\n    desCoin?: string,\r\n    srcAmount?: number,\r\n    reciverName?: string,\r\n    msg?: string\r\n}\r\n\r\nexport const TransferMoney = () => {\r\n    const { currencyRates, srcCurrCurrencyImg, desCurrCurrencyImg } = useSelector((state: RootState) => state.currencyRateModule)\r\n    const dispatch = useDispatch()\r\n    const loggedInUser: any = useSelector((state: RootState) => state.userModule.loggedInUser)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrencyRates());\r\n    }, [])\r\n\r\n    const [currRate, setCurrRate] = useState<any>(null);\r\n\r\n    const onRateChange = async (rateProperties: IRateProperties) => {\r\n        const currRate = await rateService.getRate(rateProperties)\r\n        dispatch(setCurrRateImgs(rateProperties))\r\n        setCurrRate(currRate)\r\n    }\r\n\r\n    const [transferProperties, handleChange, setTransferProperties] = useForm({\r\n        srcCoin: 'ILS',\r\n        desCoin: 'PHP',\r\n        srcAmount: 100,\r\n        reciverName: '',\r\n        msg: ''\r\n    }, onRateChange)\r\n\r\n    const onTransfer = async (ev: FormEvent<HTMLFormElement> | null = null) => {\r\n        if (ev) ev.preventDefault();\r\n        try {\r\n            const { srcCoin, desCoin, srcAmount, reciverName, msg } = transferProperties\r\n            const transfer: ITransfer = {\r\n                from: loggedInUser.username,\r\n                srcCoin,\r\n                srcCurrCurrencyImg,\r\n                srcAmount,\r\n                desCoin,\r\n                desCurrCurrencyImg,\r\n                desAmount: srcAmount * currRate,\r\n                reciverName,\r\n                msg\r\n            }\r\n            await transferService.addTransfer(transfer)\r\n            eventBusService.showSuccessMsg('Transfer completed Succesfully!')\r\n            setTransferProperties((prevState: ITransferState) => ({ ...prevState, reciverName: '', msg: '' }))\r\n        } catch (err) {\r\n            eventBusService.showErrorMsg('Sorry cant transfer money!')\r\n            console.log('error: ', err)\r\n        }\r\n    }\r\n\r\n    if (!currRate || !currencyRates || !srcCurrCurrencyImg || !desCurrCurrencyImg) return <Loading />\r\n\r\n    const { srcCoin, desCoin, srcAmount, reciverName, msg } = transferProperties\r\n\r\n    return (\r\n        <section className=\"transfer-money\">\r\n            <form className=\"currency-form\" onSubmit={(ev) => onTransfer(ev)}>\r\n                <h2>Check out our rates</h2>\r\n                <h3>When you send</h3>\r\n                <div className=\"flex space-between align-center\">\r\n                    <input type=\"number\" min={1} onChange={handleChange} name=\"srcAmount\" value={srcAmount} />\r\n                    <div className=\"flex align-center\">\r\n                        <img className=\"img-icon\" src={srcCurrCurrencyImg} />\r\n                        <select value={srcCoin} onChange={handleChange} name=\"srcCoin\">\r\n                            <CurrencyRateList currencyRates={currencyRates} type={'src'} />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <h3>They'll receive</h3>\r\n                <div className=\"flex space-between align-center\">\r\n                    <div>{srcAmount * currRate}</div>\r\n                    <div className=\"flex align-center\">\r\n                        <img className=\"img-icon\" src={desCurrCurrencyImg} />\r\n                        <select value={desCoin} onChange={handleChange} name=\"desCoin\">\r\n                            <CurrencyRateList currencyRates={currencyRates} type={'des'} />\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div >\r\n                    <div className=\" reciver-name flex space-between align-center\">\r\n                        <label htmlFor=\"reciverName\">Reciver name: </label>\r\n                        <input type=\"text\" name=\"reciverName\" id=\"reciverName\"\r\n                            value={reciverName} placeholder=\"Reciver Name\"\r\n                            onChange={handleChange} required\r\n                        />\r\n                    </div>\r\n                    <textarea name=\"msg\" value={msg} placeholder=\"Your massage...\"\r\n                        onChange={handleChange} required>\r\n                    </textarea>\r\n                </div>\r\n                <button>Transfer</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import { Dashboard } from \"../pages/Dashboard\";\nimport { History } from \"../pages/History\";\nimport { Home } from \"../pages/Home\";\nimport { Login } from \"../pages/Login\";\nimport { Rates } from \"../pages/Rates\";\nimport { Signup } from \"../pages/Signup\";\n\ninterface IRoutes {\n    path: string,\n    component: any\n}\n\nconst routes: IRoutes[] = [\n    {\n        path: '/dashboard',\n        component: Dashboard,\n    },\n    {\n        path: '/history',\n        component: History,\n    },\n    {\n        path: '/rates',\n        component: Rates,\n    },\n    {\n        path: '/signup',\n        component: Signup,\n    },\n    {\n        path: '/login',\n        component: Login,\n    },\n    {\n        path: '/',\n        component: Home,\n    }\n]\n\nexport default routes;\n","import { useSelector } from 'react-redux';\r\nimport { RateExamples } from '../cmp/RateExamples';\r\nimport { TransferMoney } from '../cmp/TransferMoney';\r\nimport { RootState } from '../store';\r\n\r\nexport const Rates = () => {\r\n    const loggedInUser: any = useSelector((state: RootState) => state.userModule.loggedInUser)\r\n\r\n    return (\r\n        <section className=\"rates \">\r\n            <div className=\"title\">\r\n                <h1>Send money home with Rewire</h1>\r\n                <h3>Financial services that make you feel at home</h3>\r\n            </div>\r\n            {!loggedInUser && <RateExamples />}\r\n            {loggedInUser && <TransferMoney />}\r\n        </section >\r\n    )\r\n}\r\n","import { FormEvent } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm'\r\nimport { useDispatch } from 'react-redux';\r\nimport { onSignup } from '../store/actions/userActions';\r\n\r\nexport const Signup = ({ history }: any) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [credentials, handleChange] = useForm({\r\n        username: '',\r\n        password: '',\r\n        fullname: ''\r\n    })\r\n\r\n    const onSignupSubmit = async (ev: FormEvent<HTMLFormElement> | null = null) => {\r\n        if (ev) ev.preventDefault();\r\n        try {\r\n            await dispatch(onSignup(credentials))\r\n            history.push('/rates')\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const { username, password, fullname } = credentials;\r\n\r\n    return (\r\n        <section className=\"login-signup flex direction-col align-center\">\r\n            <form className=\"login-signup-form flex direction-col align-center justify-center\" onSubmit={(ev) => onSignupSubmit(ev)}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"fullname\"\r\n                    value={fullname}\r\n                    placeholder=\"Full Name\"\r\n                    onChange={handleChange}\r\n                    required\r\n                    autoFocus\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    placeholder=\"Username\"\r\n                    onChange={handleChange}\r\n                    required\r\n                    autoFocus\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <button>Signup</button>\r\n            </form>\r\n            <Link className=\"to-login-signup\" to=\"/login\">Login?</Link>\r\n        </section>\r\n    )\r\n}\r\n","import { FormEvent } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { useDispatch, } from 'react-redux';\r\nimport { onLogin } from '../store/actions/userActions'\r\n\r\nexport const Login = ({ history }: any) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [credentials, handleChange] = useForm({\r\n        username: '',\r\n        password: '',\r\n    })\r\n\r\n    const onLoginSubmit = async (ev: FormEvent<HTMLFormElement> | null = null) => {\r\n        try {\r\n            if (ev) ev.preventDefault();\r\n            await dispatch(onLogin(credentials))\r\n            history.push('/rates')\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const { username, password } = credentials;\r\n\r\n    return (\r\n        <section className=\"login-signup flex direction-col align-center\">\r\n            <form className=\"login-signup-form flex direction-col align-center justify-center\" onSubmit={(ev) => onLoginSubmit(ev)}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    placeholder=\"Username\"\r\n                    onChange={handleChange}\r\n                    required\r\n                    autoFocus\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <button>Log in</button>\r\n            </form>\r\n            <Link className=\"to-login-signup\" to=\"/signup\">Sign up?</Link>\r\n            <h3>* For quick login try: </h3>\r\n            <small>\r\n                Username: user <br />\r\n                Password: 1234\r\n            </small>\r\n        </section>\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const Home = () => {\r\n    const loggedInUser: any = useSelector((state: RootState) => state.userModule.loggedInUser)\r\n\r\n    return (\r\n        <section className=\"home flex align-center direction-col\">\r\n            <div className=\"container\">\r\n                <img src=\"https://www.rewire.co.il/wp-content/uploads/2019/10/Group-3.png\" />\r\n                <h1>The easiest way to send money home</h1>\r\n                <p>Rewire helps you give your loved ones more –\r\n                    more cash and more convenience. We’re fast and secure,\r\n                    with great rates and transfers arriving within one business day.\r\n                    Simply choose the transfer type that suits you best: online bank transfer,\r\n                    cash, post office… Whatever your needs, we’ve got you covered.\r\n                </p>\r\n                {!loggedInUser && <button><Link to=\"/login\"> Login to transfer</Link></button>}\r\n                {loggedInUser && <button><Link to=\"/rates\"> Get started</Link></button>}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { AppFotter } from './cmp/AppFooter';\nimport { AppHeader } from './cmp/AppHeader';\nimport { UserMsg } from './cmp/UserMsg';\nimport routes from './routes/routes';\n\nfunction App() {\n  return (\n    <Router>\n      <UserMsg />\n      <AppHeader />\n      <main className=\"main-container\">\n        <Switch>\n          {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\n        </Switch>\n      </main>\n      <AppFotter />\n    </Router>\n  );\n}\n\nexport default App;\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ICurrencyRate } from \"../../interface/ICurrencyRate\"\r\nimport { ICurrencyRateState } from \"../../interface/ICurrencyRateState\"\r\n\r\nconst INITIAL_STATE: ICurrencyRateState = {\r\n  currencyRates: [],\r\n  srcCurrCurrencyImg: '',\r\n  desCurrCurrencyImg: '',\r\n}\r\n\r\nexport function currencyRateReducer(state: ICurrencyRateState = INITIAL_STATE, action: any) {\r\n  switch (action.type) {\r\n    case 'SET_CURRENCY_RATES':\r\n      return {\r\n        ...state,\r\n        currencyRates: action.currencyRates\r\n      }\r\n    case 'SET_IMGS':\r\n      const srcCurrency: ICurrencyRate[] = state.currencyRates.filter((currencyRate: ICurrencyRate) => {\r\n        return currencyRate.currency === action.rateProperties.srcCoin\r\n      })\r\n      const desCurrency: ICurrencyRate[] = state.currencyRates.filter((currencyRate: ICurrencyRate) => {\r\n        return currencyRate.currency === action.rateProperties.desCoin\r\n      })\r\n      return {\r\n        ...state,\r\n        srcCurrCurrencyImg: srcCurrency[0]?.img,\r\n        desCurrCurrencyImg: desCurrency[0]?.img,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","const initialState = {\r\n  loggedInUser: null\r\n}\r\n\r\nexport function userReducer(state = initialState, action: any) {\r\n  var newState = state;\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      newState = { ...state, loggedInUser: action.user }\r\n      break;\r\n    default:\r\n  }\r\n  return newState;\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { currencyRateReducer } from './reducers/currencyRateReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\n// Connecting redux devtools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n// Combining reducers into one\r\nconst rootReducer = combineReducers({\r\n  currencyRateModule: currencyRateReducer,\r\n  userModule: userReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../src/assets/styles/main.scss';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}